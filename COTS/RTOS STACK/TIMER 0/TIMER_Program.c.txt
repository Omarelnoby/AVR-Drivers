/***************************************************************************************************/
/***************************************************************************************************/
/************************* creator:Omar Ahmed ******************************************************/
/*************************  layer:RTOS stack *************************************************************/
/*************************    swc:TIMER0   ************************************************************/

#include "std_types.h"
#include "bit_math.h"
#include "TIMER_Register.h"
#include "TIMER_Interface.h"
#include "TIMER_Private.h"
#include "TIMER_Config.h"

         /*Global pointers to functions to hold the address of the call back functions*/

static void(*TIMER0_pvCompareMatchBackFunc)(void)=NULL;

void TIMER0_voidInit(void){
/*choose ctc mode*/
CLEAR_BIT(TCCR0,TCCR0_WGM00);
SET_BIT(TCCR0,TCCR0_WGM01);

/*output compare interrupt enable */
SET_BIT(TIMSK,TIMSK_OCIE0);
/*set compare match value to 250*/
OCR0=125;
/*prescaler division by 64*/
SET_BIT(TCCR0,TCCR0_CS00);
SET_BIT(TCCR0,TCCR0_CS01);
CLEAR_BIT(TCCR0,TCCR0_CS02);

}
void TIMER0_voidSetCompareValue(u8 Copy_u8Value){
OCR0=Copy_u8Value;
}
u8 TIMER0_u8SetCallBack(void(*CopypvCallBackFunc)(void)){
u8 Local_u8ErrorState==OK;
if(CopypvCallBackFunc!=NULL){ 
TIMER0_pvCompareMatchBackFunc=CopypvCallBackFunc;
}
else{
Local_u8ErrorState==NULL;
}
return Local_u8ErrorState;
}

void __vector_10 (void) __attribute__((signal));
void __vector_10 (void){
if(TIMER0_pvCompareMatchBackFunc!=NULL){ 
 TIMER0_pvCompareMatchBackFunc();
} 
}
